name: Test PHP


on: [pull_request]

jobs:
  phplint:
    name: Phplint
    runs-on: ubuntu-latest
    steps:
      - name: Setup PHP version
        uses: shivammathur/setup-php@v1
        with:
          php-version: '5.6'
          extensions: simplexml
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Setup Composer cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install composer
        run: composer install --prefer-dist --no-progress --no-suggest
      - name: Run PHPCS
        run: composer run lint
  phpunit:
    name: Build
    strategy:
      matrix:
        php: [7.3]
        mysql: [5.7.27]
        wordpress: [5.2.2]
        phpunit: [7.5.15]
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}-apache
      ports:
        - 80
      volumes:
        - $GITHUB_WORKSPACE:/var/www/html
    services:
      mysql:
        image: mysql:${{ matrix.mysql }}
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306
        volumes:
          - $HOME/mysql:/var/lib/mysql
    steps:
      - name: Set up container
        run: |
          echo "Update package lists."
          apt-get update
          echo "Install base packages."
          apt-get install -y build-essential libssl-dev gnupg libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libicu-dev libxml2-dev vim wget unzip git subversion default-mysql-client
          echo "Install composer."
          curl -sS https://getcomposer.org/installer | php
          mv composer.phar /usr/local/bin/composer
          echo "Install PHP extensions."
          docker-php-ext-install -j$(nproc) iconv intl xml soap opcache pdo pdo_mysql mysqli mbstring
          docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
          docker-php-ext-install -j$(nproc) gd
          pecl install mcrypt-1.0.2
          docker-php-ext-enable mcrypt
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Run composer install
        run: |
          composer install --prefer-dist --no-dev

      - name: Install WordPress Test Suite
        run: |
          bash bin/install-wp-tests.sh wordpress_test root root mysql ${{ matrix.wordpress }}

      - name: Install PHPUnit
        run: |
          composer global require "phpunit/phpunit=${{ matrix.phpunit }}"

      - name: Run PHPUnit
        run: |
          ~/.composer/vendor/bin/phpunit $GITHUB_WORKSPACE