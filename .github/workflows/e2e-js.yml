name: Test e2e for JS

on:
  pull_request:
    types: [ opened, synchronize, ready_for_review ]
    branches-ignore:
      - "update_dependencies"

jobs:
  e2e:
    runs-on: ubuntu-latest
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      # setup the composer cache (vendor) with github actions cache and the cache dir defined in the previous step
      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      # run composer install
      - name: Install composer
        run: composer install --prefer-dist --no-progress --no-suggest

      # setup the node cache (node_modules) with github actions cache
      - name: Cache Node - npm
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-cache-
      
      - name: npm ci
        run: |
          npm ci
          
      - name: Make dev build
        run: |
          npm run build-dev

      - name: Create License File
        run: |
          printf "{\"key\":\"${{ secrets.OTTER_PRO_LICENSE }}\"}" > license.json

      - name: Setup WP Env
        run: |
          npm run wp-env start

      # run the node.js puppeteer script (which takes the screenshots and controls chrome)
      - run: npm run test:e2e

      - name: Upload video files
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: ./artifacts/tests/
          retention-days: 1
      
      - name: Print the results
        run: |
          echo "::set-output name=TYPING_AVG::$(jq '.summary.type.average' ./artifacts/performance.spec.performance-results.json)"
          echo "::set-output name=TYPING_SD::$(jq '.summary.type.standardDeviation' ./artifacts/performance.spec.performance-results.json)"
          echo "::set-output name=TYPING_MD::$(jq '.summary.type.median' ./artifacts/performance.spec.performance-results.json)"
          echo "::set-output name=TYPING_QR60::$(jq '.summary.type.quantileRank60' ./artifacts/performance.spec.performance-results.json)"
          echo "::set-output name=TYPING_ABOVE_60::$(jq -c '.summary.type.above60' ./artifacts/performance.spec.performance-results.json)"
          echo "::set-output name=TYPING_QR80::$(jq '.summary.type.quantileRank80' ./artifacts/performance.spec.performance-results.json)"
        id: summary  

      - name: Comment
        uses: NejcZdovc/comment-pr@v1
        with:
          file: 'e2e-summary.md'
          identifier: "GITHUB_E2E_SUMMARY"
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
          TYPING_AVG: ${{ steps.summary.outputs.TYPING_AVG }}
          TYPING_SD: ${{ steps.summary.outputs.TYPING_SD }}
          TYPING_MD: ${{ steps.summary.outputs.TYPING_MD }}
          TYPING_QR60: ${{ steps.summary.outputs.TYPING_QR60 }}
          TYPING_QR80: ${{ steps.summary.outputs.TYPING_QR80 }}
          TYPING_ABOVE_60: ${{ steps.summary.outputs.TYPING_ABOVE_60 }}

  
  